package com.sample
import java.util.ArrayList;
import java.util.ArrayList
import javax.swing.JOptionPane;

rule "Drama or Comedy#Drama"
	when 
		Question(getAnswer() == "Drama", getQuestion() == "Drama or Comedy")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Do you like sci-fi or supernatural shows?",answers,null);
		insert(q);
end

rule "Drama or Comedy#Comedy"
	when 
		Question(getAnswer() == "Comedy", getQuestion() == "Drama or Comedy")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Do you like your characters to have questionable morals?",answers,null);
		insert(q);
end

rule "Drama or Comedy#A little of both "
	when 
		Question(getAnswer() == "A little of both", getQuestion() == "Drama or Comedy")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Small town");
		answers.add("Prison");
		Question q = new Question("Small town or prison?",answers,null);
		insert(q);
end

rule "Small town or prison?#Small town"
	when 
		Question(getAnswer() == "Small town", getQuestion() == "Small town or prison?")
	then
		Recommendation rec = showingRecommendation("Gilmore girls");
		insert(rec);
end

rule "Small town or prison?#Prison"
	when 
		Question(getAnswer() == "Prison", getQuestion() == "Small town or prison?")
	then
		Recommendation rec = showingRecommendation("OITNB");
		insert(rec);
end


rule "Do you like sci-fi or supernatural shows?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Do you like sci-fi or supernatural shows?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Can you handle gore?",answers,null);
		insert(q);
end

rule "Do you like sci-fi or supernatural shows?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Do you like sci-fi or supernatural shows?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Politics?",answers,null);
		insert(q);
end

rule "Can you handle gore?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Can you handle gore?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Do you like zombies?",answers,null);
		insert(q);
end

rule "Do you like zombies?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Do you like zombies?")
	then
		Recommendation rec = showingRecommendation("The Walking Dead");
		insert(rec);
end

rule "Do you like zombies?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Do you like zombies?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Vampires?",answers,null);
		insert(q);
end

rule "Vampires?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Vampires?")
	then
		Recommendation rec = showingRecommendation("Supernatural");
		insert(rec);
end

rule "Vampires?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Vampires?")
	then
		Recommendation rec = showingRecommendation("The vampire diaries");
		insert(rec);
end

rule "Can you handle gore?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Can you handle gore?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("British characters?",answers,null);
		insert(q);
end

rule "British characters?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "British characters?")
	then
		Recommendation rec = showingRecommendation("Lost");
		insert(rec);
end

rule "British characters?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "British characters?")
	then
		Recommendation rec = showingRecommendation("Dr. Who");
		insert(rec);
end

rule "Politics?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Politics?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Need action?",answers,null);
		insert(q);
end

rule "Need action?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Need action?")
	then
		Recommendation rec =showingRecommendation("24");
		insert(rec);
end

rule "Need action?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Need action?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Scandalous romance?",answers,null);
		insert(q);
end

rule "Scandalous romance?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Scandalous romance?")
	then
		Recommendation rec =showingRecommendation("Scandal");
		insert(rec);
end

rule "Scandalous romance?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Scandalous romance?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Optimistic");
		answers.add("Cynical");
		Question q = new Question("Optimistic or Cynical?",answers,null);
		insert(q);
end

rule "Optimistic or Cynical?#Optimistic"
	when 
		Question(getAnswer() == "Optimistic", getQuestion() == "Optimistic or Cynical?")
	then
		Recommendation rec =showingRecommendation("The west wing");
		insert(rec);
end

rule "Optimistic or Cynical?#Cynical"
	when 
		Question(getAnswer() == "Cynical", getQuestion() == "Optimistic or Cynical?")
	then
		Recommendation rec =showingRecommendation("House of cards");
		insert(rec);
end

rule "Politics?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Politics?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Feel like crying?",answers,null);
		insert(q);
end

rule "Feel like crying?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Feel like crying?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Do you like crime shows?",answers,null);
		insert(q);
end

rule "Feel like crying?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Feel like crying?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Do you like football?",answers,null);
		insert(q);
end

rule "Do you like football?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Do you like football?")
	then
		Recommendation rec =showingRecommendation("Friday Night/Lights");
		insert(rec);
end

rule "Do you like football?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Do you like football?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Hospitals?",answers,null);
		insert(q);
end

rule "Hospitals?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Hospitals?")
	then
		Recommendation rec =showingRecommendation("Parenthood");
		insert(rec);
end

rule "Hospitals?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Hospitals?")
	then
		Recommendation rec =showingRecommendation("Grey's anatomy");
		insert(rec);
end

rule "Do you like crime shows?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Do you like crime shows?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Meth?",answers,null);
		insert(q);
end

rule "Meth?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Meth?")
	then
		Recommendation rec =showingRecommendation("Mad men");
		insert(rec);
end

rule "Meth?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Meth?")
	then
		Recommendation rec =showingRecommendation("Breaking bad");
		insert(rec);
end

rule "Do you like crime shows?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Do you like crime shows?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Do you root for the criminals?",answers,null);
		insert(q);
end

rule "Do you root for the criminals?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Do you root for the criminals?")
	then
		Recommendation rec =showingRecommendation("Dexter");
		insert(rec);
end

rule "Do you root for the criminals?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Do you root for the criminals?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Forensics");
		answers.add("Psychology");
		Question q = new Question("Forensics or Psychology?",answers,null);
		insert(q);
end

rule "Forensics or Psychology?#Forensics"
	when 
		Question(getAnswer() == "Forensics", getQuestion() == "Forensics or Psychology?")
	then
		Recommendation rec =showingRecommendation("CSI: MIAMI");
		insert(rec);
end

rule "Forensics or Psychology?#Psychology"
	when 
		Question(getAnswer() == "Psychology", getQuestion() == "Forensics or Psychology?")
	then
		Recommendation rec =showingRecommendation("Criminal minds");
		insert(rec);
end

rule "Do you like your characters to have questionable morals?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Do you like your characters to have questionable morals?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Friends");
		answers.add("Family");
		Question q = new Question("Friend group or Dysfuntional family?",answers,null);
		insert(q);
end

rule "Friend group or Dysfuntional family?#Family"
	when 
		Question(getAnswer() == "Family", getQuestion() == "Friend group or Dysfuntional family?")
	then
		Recommendation rec =showingRecommendation("Arrested Development");
		insert(rec);
end

rule "Friend group or Dysfuntional family?#Friends"
	when 
		Question(getAnswer() == "Friends", getQuestion() == "Friend group or Dysfuntional family?")
	then
		Recommendation rec =showingRecommendation("It's always sunny in Philadelphia");
		insert(rec);
end

rule "Do you like your characters to have questionable morals?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Do you like your characters to have questionable morals?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Do you like strong female characters?",answers,null);
		insert(q);
end

rule "Do you like strong female characters?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Do you like strong female characters?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Workplace humor?",answers,null);
		insert(q);
end

rule "Workplace humor?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Workplace humor?")
	then
		Recommendation rec =showingRecommendation("The Office");
		insert(rec);
end

rule "Workplace humor?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Workplace humor?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Want to see James Franco & Seth Rogen as high schoolers?",answers,null);
		insert(q);
end

rule "Want to see James Franco & Seth Rogen as high schoolers?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Want to see James Franco & Seth Rogen as high schoolers?")
	then
		Recommendation rec =showingRecommendation("Freaks & Geeks");
		insert(rec);
end

rule "Want to see James Franco & Seth Rogen as high schoolers?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Want to see James Franco & Seth Rogen as high schoolers?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Bar");
		answers.add("Cafe");
		Question q = new Question("Do you want your NYC friends to hang out at a Bar or Cafe?",answers,null);
		insert(q);
end

rule "Do you want your NYC friends to hang out at a Bar or Cafe?#Bar"
	when 
		Question(getAnswer() == "Bar", getQuestion() == "Do you want your NYC friends to hang out at a Bar or Cafe?")
	then
		Recommendation rec =showingRecommendation("How I met your mother");
		insert(rec);
end

rule "Do you want your NYC friends to hang out at a Bar or Cafe?#Cafe"
	when 
		Question(getAnswer() == "Cafe", getQuestion() == "Do you want your NYC friends to hang out at a Bar or Cafe?")
	then
		Recommendation rec =showingRecommendation("FRIENDS");
		insert(rec);
end

rule "Do you like strong female characters?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Do you like strong female characters?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Yes");
		answers.add("No");
		Question q = new Question("Do you like them to sell drugs?",answers,null);
		insert(q);
end

rule "Do you like them to sell drugs?#Yes"
	when 
		Question(getAnswer() == "Yes", getQuestion() == "Do you like them to sell drugs?")
	then
		Recommendation rec =showingRecommendation("WEEDS");
		insert(rec);
end

rule "Do you like them to sell drugs?#No"
	when 
		Question(getAnswer() == "No", getQuestion() == "Do you like them to sell drugs?")
	then
		ArrayList<String> answers = new ArrayList<>();
		answers.add("Tina");
		answers.add("Amy");
		Question q = new Question("Tina Fey or Amy Poehler?",answers,null);
		insert(q);
end

rule "Tina Fey or Amy Poehler?#Tina"
	when 
		Question(getAnswer() == "Tina", getQuestion() == "Tina Fey or Amy Poehler?")
	then
		Recommendation rec =showingRecommendation("30 Rock");
		insert(rec);
end

rule "Tina Fey or Amy Poehler?#Amy"
	when 
		Question(getAnswer() == "Amy", getQuestion() == "Tina Fey or Amy Poehler?")
	then
		Recommendation rec =showingRecommendation("Parks & Recreation");
		insert(rec);
end

rule "Saving answers"
	when
		not(exists(Question(getAnswer() == null)))
		exists(Recommendation())
		q : Question()
	then
		JSonHandler.savingQuestion(q.getQuestion(),q.getAnswer());
end

rule "Saving recommendation and closing file"
	when
		r : Recommendation()
	then
		JSonHandler.savingRecommendation(r.getRecommendation());
		JSonHandler.preparingEndOfFile();
end

	
	
	